---
- hosts: vcenter
  gather_facts: no
  vars_files:  /root/vm_migration/vars_files/vcenter_cred.yaml
  tasks:
    - name: Gather all registered virtual machines
      community.vmware.vmware_vm_info:
        hostname: "{{ hostname }}"
        username: "{{ username }}"
        password: "{{ password }}"
        validate_certs: no
      delegate_to: localhost
      register: vm_info

    - name: Read Vm from CSV file
      community.general.read_csv:
        path: /root/vm_migration/list_vm.csv
        fieldnames: vm_name,os,ram,cpu_count,volume_size,openstack_project,vcenter_name,datacenter_name,datastore_name,cluster,folder
        delimiter: ','
      register: gather_list_csv_vm
      delegate_to: localhost

    - name: Collecter les informations de datastore de VM
      community.vmware.vmware_datastore_info:
        hostname: "{{ hostname }}"
        username: "{{ username }}"
        password: "{{ password }}"
        validate_certs: no
        datacenter_name: "{{ item.datacenter_name }}"
        name: "{{ item.datastore_name }}"
      delegate_to: localhost
      register: datastore_info
      loop: "{{ gather_list_csv_vm.list[1:] }}"

    - name: Afficher l'espace disponible du datastore de la VM
      debug:
        var: " - available storage :  {{ (item.datastores[0].freeSpace / 1024 / 1024 / 1024) | round(2) }} GB"
      loop: "{{datastore_info.results}}"

    - name: datastore info
      debug:
        var: datastore_info
      delegate_to: localhost

    - name: Set fact for existing VMs
      set_fact:
        existing_vms: "{{ vm_info.virtual_machines | map(attribute='guest_name') | list }}"

    - name: Cloner une VM
      community.vmware.vmware_guest:
           hostname: "{{ hostname }}"
           username: "{{ username }}"
           password: "{{ password }}"
           datacenter: "{{ item.datacenter_name }}"
           cluster: "{{ item.cluster }}"
           folder: "{{ item.folder }}"
           name: "{{ item.vm_name }}-clone"
           template: "{{ item.vm_name }}"
           state: poweredoff
           validate_certs: false
      loop: "{{ gather_list_csv_vm.list[1:] }}"
      when: >
        (datastore_info.results[0].datastores[0].freeSpace | int) > (item.volume_size | float)
      delegate_to: localhost
      ignore_errors: yes

    - name: Exporter une VM en OVF
      community.vmware.vmware_export_ovf:
           hostname: "{{ hostname }}"
           username: "{{ username }}"
           password: "{{ password }}"
           validate_certs: false
           name: "{{ item.vm_name }}-clone"
           export_dir: /home/share
      become: true
      loop: "{{ gather_list_csv_vm.list[1:] }}"
      delegate_to: localhost
      ignore_errors: yes
